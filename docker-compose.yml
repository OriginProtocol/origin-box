version: "3"

networks:
  origin-develop:

volumes:
  origin_js_node_modules:
  contracts:  # Compiled contracts
  flask_session: # Flask session persistence
  pg_data:

services:
  postgres:
    container_name: postgres
    restart: always
    image: postgres:10.0
    # Data persistence, comment out the following two lines to disable
    volumes:
      - pg_data:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=origin
      - POSTGRES_PASSWORD=origin
      - POSTGRES_DB=origin_bridge
    networks:
      - origin-develop

  redis:
    container_name: redis
    restart: always
    image: redis
    sysctls:
      - net.core.somaxconn=4096
    networks:
      - origin-develop

# elasticsearch:
#   image: docker.elastic.co/elasticsearch/elasticsearch:6.3.1
#   container_name: elasticsearch
#   ports:
#     - "9200:9200"
#   environment:
#     ES_JAVA_OPTS: "-Xmx256m -Xms256m"
#   ports:
#     - "9200:9200"
#   networks:
#     - origin-develop

  origin-js:
    container_name: origin-js
    image: origin-js
    build:
      context: .
      dockerfile: dockerfiles/origin-js
    volumes:
      - ./origin-js:/app
      - origin_js_node_modules:/app/node_modules
      - contracts:/app/contracts/build/contracts
    ports:
      - "5002:5002" # API
      - "8080:8080" # IPFS gateway
      - "8081:8081" # Tests
      - "8545:8545" # Blockchain
    # Run npm install on every container start to avoid volumes issue
    # https://github.com/docker/compose/issues/4337
    command: >
      /bin/bash -c "npm install && node scripts/build.js serve"
    networks:
      - origin-develop

  origin-bridge:
    container_name: origin-bridge
    build:
      context: .
      dockerfile: dockerfiles/origin-bridge
    image: origin-bridge
    volumes:
      - ./origin-bridge:/app
      # Set the envfile from the local envfile
      - ./envfiles/origin-bridge.env:/app/.env
      - flask_session:/app/flask_session
      # Contracts volume mounted so origin-bridge uses the contracts compiled
      # by origin-js
      - contracts:/app/contracts
    depends_on:
      - postgres
      - redis
      - origin-js
    ports:
      - "5000:5000"
    environment:
      - FLASK_APP=/app/main.py
      - FLASK_DEBUG=1
    command:
      # Waits for origin-js to start, 8080 is the IPFS server which starts
      # after the contracts have been compiled
      >
      /bin/bash -c "wait-for.sh -t 0 -q origin-js:8080 --
      echo 'origin-js is available, starting origin-bridge...' &&
      flask run --host=0.0.0.0"
    networks:
      - origin-develop

  origin-bridge-celery:
    container_name: origin-bridge-celery
    image: origin-bridge
    user: nobody
    volumes:
      - ./origin-bridge:/app
      # Set the envfile from the local envfile
      - ./envfiles/origin-bridge.env:/app/.env
      - contracts:/app/contracts
    depends_on:
      - origin-bridge
    command:
      # Celery beat is currently disabled because of incompatibilities between
      # the develop branches of origin-bridge and origin-js, add " -B" to the
      # celery command to enable
      >
      /bin/bash -c "wait-for.sh -t 0 -q origin-bridge:5000 --
      echo 'origin-bridge is available, starting origin-bridge celery...' &&
      watchmedo auto-restart -d . -p '*.py' -i '*.pyc' --recursive --
      celery -A util.tasks worker -l info -c=1 -E"
    networks:
      - origin-develop

  origin-dapp:
    container_name: origin-dapp
    build:
      context: .
      dockerfile: dockerfiles/origin-dapp
    volumes:
      # Mount each directory of origin-dapp separately so that the
      # node_modules doesn't require the volume trick which introduces
      # an issue with package.json dependencies not being updated on
      # container rebuild
      - ./origin-dapp/src:/app/src
      - ./origin-dapp/translations:/app/translations
      - ./origin-dapp/public:/app/public
      - ./origin-dapp/webpack.config.js:/app/webpack.config.js
      # Set the envfile from the local envfile
      - ./envfiles/origin-dapp.env:/app/.env
      # Mount compiled origin-js inside node modules
      - ./origin-js/dist:/app/node_modules/origin/dist
      - origin_js_node_modules:/app/node_modules/origin/node_modules
    depends_on:
      - origin-bridge
    ports:
      - "3000:3000"
    command:
      # Waits for origin-bridge to start
      >
      /bin/bash -c "wait-for.sh -t 0 -q origin-bridge:5000 --
      echo 'origin-bridge is available, starting origin-dapp' &&
      node_modules/.bin/webpack-dev-server --host 0.0.0.0 --watch-poll 500"
    networks:
      - origin-develop
