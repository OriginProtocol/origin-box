apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: {{ template "eth.fullname" . }}
  labels:
    app: {{ template "eth.fullname" . }}
    chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    release: "{{ .Release.Name }}"
    heritage: "{{ .Release.Service }}"
  annotations:
    kubernetes.io/ingress.class: nginx
    kubernetes.io/tls-acme: "true"
    certmanager.k8s.io/cluster-issuer: {{ .Values.clusterIssuer }}
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    nginx.ingress.kubernetes.io/enable-cors: "true"
    nginx.ingress.kubernetes.io/cors-allow-methods: "GET, POST"
spec:
  tls:
    {{ if eq .Values.clusterIssuer "letsencrypt-staging" }}
    - secretName: eth.{{ .Release.Namespace }}.originprotocol.com-staging
    {{ else }}
    - secretName: eth.{{ .Release.Namespace }}.originprotocol.com
    {{ end }}
      hosts:
        - eth.{{ .Release.Namespace }}.originprotocol.com
  rules:
  - host: eth.{{ .Release.Namespace }}.originprotocol.com
    http:
      paths:
      - path: /
        backend:
          serviceName: {{ template "eth.fullname" . }}
          servicePort: 8545
      # TODO use separate ingress and adjust for websocket
      - path: /ws
        backend:
          serviceName: {{ template "eth.fullname" . }}
          servicePort: 8546
