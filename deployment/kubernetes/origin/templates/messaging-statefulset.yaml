apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ template "messaging.fullname" . }}
  labels:
    app: {{ template "messaging.fullname" . }}
    chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    release: "{{ .Release.Name }}"
    heritage: "{{ .Release.Service }}"
spec:
  selector:
    matchLabels:
      app: {{ template "messaging.fullname" . }}
  serviceName: {{ template "messaging.fullname" . }}
  replicas: 1
  template:
    metadata:
      labels:
        app: {{ template "messaging.fullname" . }}
    spec:
      containers:
      - name: {{ template "messaging-ipfs.fullname" . }}
        image: "{{ .Values.containerRegistry }}/{{ .Release.Namespace }}/{{ .Values.messagingIpfsImage }}:{{ .Values.messagingIpfsImageTag }}"
        ports:
        - containerPort: 5001
          name: api
          protocol: TCP
        - containerPort: 9012
          name: websocket
          protocol: TCP
        volumeMounts:
          - mountPath: /data/ipfs
            name: {{ template "messaging.fullname" . }}-data
      - name: {{ template "messaging.fullname" . }}
        image: "{{ .Values.containerRegistry }}/{{ .Release.Namespace }}/{{ .Values.messagingImage }}:{{ .Values.messagingImageTag }}"
        env:
          - name: IPFS_ADDRESS
            value: {{ template "messaging-ipfs.fullname" . }}.{{ .Release.Namespace }}.svc.cluster.local
          - name: IPFS_PORT
            value: "5001"
      restartPolicy: Always
  volumeClaimTemplates:
  - metadata:
      name: {{ template "messaging.fullname" . }}-data
      labels:
        app: {{ template "messaging-ipfs.fullname" . }}
        chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
        release: "{{ .Release.Name }}"
        heritage: "{{ .Release.Service }}"
    spec:
      accessModes:
        - ReadWriteOnce  # Read-write for a single node only
      storageClassName: "standard"
      resources:
        requests:
          storage: {{ default "8Gi" .Values.messagingIpfsStorageRequestSize }}
