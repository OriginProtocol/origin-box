apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ template "eth.fullname" . }}
  labels:
    app: {{ template "eth.fullname" . }}
    chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    release: "{{ .Release.Name }}"
    heritage: "{{ .Release.Service }}"
spec:
  replicas: 1
  selector:
    matchLabels:
      app: {{ template "eth.fullname" . }}
  serviceName: {{ template "eth.fullname" . }}
  template:
    metadata:
      labels:
        app: {{ template "eth.fullname" . }}
        chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
        release: "{{ .Release.Name }}"
    spec:
      containers:
      - name: {{ template "eth.fullname" . }}
        image: "{{ .Values.containerRegistry }}/{{ .Release.Namespace }}/{{ .Values.ethNodeImage }}:{{ .Values.ethNodeImageTag }}"
        ports:
        - containerPort: 8545
          name: rpc
          protocol: TCP
        {{ if ne .Release.Namespace "dev" }}
        - containerPort: 8546
          name: ws
          protocol: TCP
        {{ end }}
        volumeMounts:
          - mountPath: /ethereum
            name: {{ template "eth.fullname" . }}-data
      restartPolicy: Always
  volumeClaimTemplates:
  - metadata:
      name: {{ template "eth.fullname" . }}-data
    spec:
      storageClassName: "standard"
      accessModes:
        - ReadWriteOnce  # Read-write for a single node only
      resources:
        requests:
          {{ if eq .Release.Namespace "dev" }}
            storage: 5Gi
          {{ end }}
          {{ if eq .Release.Namespace "staging" }}
            # Rinkeby
            storage: 100Gi
          {{ end }}
          {{ if eq .Release.Namespace "prod" }}
            # Mainnet
            storage: 2000Gi
          {{ end }}

