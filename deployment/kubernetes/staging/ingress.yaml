apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: nginx-ingress
  namespace: staging
  annotations:
    kubernetes.io/ingress.class: nginx
    kubernetes.io/tls-acme: "true"
    certmanager.k8s.io/cluster-issuer: letsencrypt-staging
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
spec:
  tls:
    - secretName: bridge-staging-cert
      hosts:
        - bridge.staging.originprotocol.com
    - secretName: dapp-staging-cert
      hosts:
        - dapp.staging.originprotocol.com
  rules:
  - host: bridge.staging.originprotocol.com
    http:
      paths:
      - path: /
        backend:
          serviceName: origin-bridge
          servicePort: 5000
  - host: dapp.staging.originprotocol.com
    http:
      paths:
        - path: /
          backend:
            serviceName: origin-dapp
            servicePort: 80
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: nginx-ingress-websocket
  namespace: staging
  annotations:
    kubernetes.io/ingress.class: nginx
    kubernetes.io/tls-acme: "true"
    certmanager.k8s.io/cluster-issuer: letsencrypt-prod
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    # Increase timeouts for websockets
    nginx.ingress.kubernetes.io/proxy-read-timeout: "3600"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "3600"
spec:
  tls:
    - secretName: messaging-staging-cert
      hosts:
        - messaging.staging.originprotocol.com
  rules:
    - host: messaging.staging.originprotocol.com
      http:
        paths:
          - path: /
            backend:
              serviceName: origin-messaging-ipfs
              servicePort: 9012
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: nginx-ingress-ipfs
  namespace: staging
  annotations:
    kubernetes.io/ingress.class: nginx
    kubernetes.io/tls-acme: "true"
    certmanager.k8s.io/cluster-issuer: letsencrypt-prod
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    nginx.ingress.kubernetes.io/enable-cors: "true"
    nginx.ingress.kubernetes.io/cors-allow-methods: "POST"
spec:
  tls:
    - secretName: ipfs-staging-cert
      hosts:
        - ipfs.staging.originprotocol.com
  rules:
    - host: ipfs.staging.originprotocol.com
      http:
        paths:
          # Only allow the add API call through to the IPFS API
          - path: /api/v0/add
            backend:
              serviceName: ipfs
              servicePort: 5001
          # IFPS read only gateway
          - path: /
            backend:
              serviceName: ipfs
              servicePort: 8080
