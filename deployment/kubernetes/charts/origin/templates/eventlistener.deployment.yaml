apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "eventlistener.fullname" . }}
  labels:
    app: {{ template "eventlistener.fullname" . }}
    chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    release: "{{ .Release.Name }}"
    heritage: "{{ .Release.Service }}"
spec:
  replicas: 1
  selector:
    matchLabels:
      app: {{ template "eventlistener.fullname" . }}
  template:
    metadata:
      labels:
        app: {{ template "eventlistener.fullname" . }}
        release: "{{ .Release.Name }}"
    spec:
      containers:
      - name: event-listener
        image: "{{ .Values.containerRegistry }}/{{ .Release.Namespace }}/{{ .Values.eventlistenerImage }}:{{ .Values.eventlistenerImageTag }}"
        imagePullPolicy: Always
        env:
        - name: DATABASE_HOST
          value: "localhost"
        - name: DATABASE_PORT
          value: "5432"
        - name: DATABASE_USERNAME
          valueFrom:
            secretKeyRef:
              name: {{ template "discovery.fullname" . }}
              key: DATABASE_USERNAME
        - name: DATABASE_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ template "discovery.fullname" . }}
              key: DATABASE_PASSWORD
        - name: DATABASE_NAME
          value: "discovery"
        - name: ELASTICSEARCH_HOST
          value: "elasticsearch-elasticsearch-svc:9200"
        - name: WEB3_URL
          value: {{ .Values.eventlistenerWeb3Url | quote }}
        - name: IPFS_URL
          value: https://{{ template "ipfs.host" . }}
        - name: CONTINUE_BLOCK
          value: {{ default "0" .Values.eventlistenerContinueBlock | quote }}
        command: ["/bin/sh"]
        args:
        - "-c"
        - |-
{{ .Files.Get "scripts/start-event-listener.sh" | indent 10 }}
      - name: cloudsql-proxy
        image: gcr.io/cloudsql-docker/gce-proxy:1.11
        command: ["/cloud_sql_proxy",
                  "-instances={{ .Values.discoveryDbInstance }}=tcp:5432",
                  "-credential_file=/secrets/cloudsql/credentials.json"]
        securityContext:
          runAsUser: 2  # non-root user
          allowPrivilegeEscalation: false
        volumeMounts:
        - name: cloudsql-instance-credentials
          mountPath: /secrets/cloudsql
          readOnly: true
      volumes:
        - name: cloudsql-instance-credentials
          secret:
            secretName: cloudsql-instance-credentials
