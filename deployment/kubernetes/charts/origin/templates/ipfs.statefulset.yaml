apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ template "ipfs.fullname" . }}
  labels:
    app: {{ template "ipfs.fullname" . }}
    chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    release: "{{ .Release.Name }}"
    heritage: "{{ .Release.Service }}"
spec:
  replicas: 1
  selector:
    matchLabels:
      app: {{ template "ipfs.fullname" . }}
  serviceName: {{ template "ipfs.fullname" . }}
  template:
    metadata:
      labels:
        app: {{ template "ipfs.fullname" . }}
        chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
        release: "{{ .Release.Name }}"
    spec:
      containers:
      - name: {{ template "ipfs.fullname" . }}
        image: "{{ .Values.ipfsImage }}:{{ .Values.ipfsImageTag }}"
        command: ["/usr/local/bin/start_ipfs"]
        ports:
        - containerPort: 5001
          name: api
        - containerPort: 8080
          name: gateway
        volumeMounts:
          - mountPath: /data/ipfs
            name: {{ template "ipfs.fullname" . }}-data
      restartPolicy: Always
  volumeClaimTemplates:
  - metadata:
      name: {{ template "ipfs.fullname" . }}-data
    spec:
      storageClassName: "standard"
      accessModes:
        - ReadWriteOnce
      resources:
        requests:
          storage: {{ default "8Gi" .Values.ipfsStorageRequestSize }}
